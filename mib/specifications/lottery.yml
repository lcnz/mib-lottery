openapi: 3.0.1
info:
  title: Users Service API
  description: Users Microservice of Message in a Bottle Application
  version: '0.1'
servers:
  - url: /
paths:
  /lottery/{id}:
    get:
      summary: retrieve the lottery row of the specified user
      tags: [ Lottery ]
      operationId: mib.resources.lottery.retrieve_by_id
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses: 
        200:
          description: Retrieve the user
        404:
          description: User not found
        default:
          description: Error while getting the user
    post:
      summary: create a new lottery row for the specified user
      tags: [ Lottery ]
      operationId: mib.resources.lottery.lottery_create_user
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        201:
          description: User created
        default:
          description: Error while creating the user
  /lottery/select_number/{id}:
    post:
      summary: set the chosen number for lottery row of the specified user
      tags: [ Lottery ]
      operationId: mib.resources.lottery.select_number
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: update number for a row of the user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                val_: 
                  type: integer
                  description: new number selected for lottery
              required: ['val_']
              $ref: '#/components/schemas/Update_number'
      responses: 
        201:
          description: Number setted
        404:
          description: row not found (user id not present)
        default:
          description: Error while getting the user

  /lottery/update_points:
    post:
      summary: update lottery points
      tags: [ Lottery ]
      operationId: mib.resources.lottery.update_lottery_points
      requestBody:
        description: update number for a row of the user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_points'
      responses: 
        200:
          description: Number setted
        404:
          description: row not found (user id not present)
        default:
          description: Error while getting the user



components:
  schemas:
    Update_number:
      required:
        - val_
      type: object
      properties:
        val_:
          type: integer
          description: number selected to insert in the row for ticket number
          example: 23

    Update_points:
      required:
        - userid
        - value
      type: object
      properties:
        userid:
          type: integer
          description: user identificator
          example: 1
        value:
          type: integer
          description: value to add
          example: 20
    